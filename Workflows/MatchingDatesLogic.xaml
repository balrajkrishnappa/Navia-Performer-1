<Activity mc:Ignorable="sap sap2010" x:Class="MatchingDatesLogic" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dt_FlexmanData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="out_dt_final" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="io_dt_ReceiptData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="out_DblClaimTotalCost" Type="OutArgument(x:Double)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1178,6072</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MatchingDatesLogic_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MatchingDatesLogic" sap:VirtualizedContainerService.HintSize="810,6007" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Double" Name="DblReceiptTotalCost" />
      <Variable x:TypeArguments="x:String" Name="strFlexDateOfService" />
      <Variable x:TypeArguments="x:String" Name="strRecFillDate" />
      <Variable x:TypeArguments="x:String" Name="strRecReceiptDate" />
      <Variable x:TypeArguments="x:String" Name="strRecDOS" />
      <Variable x:TypeArguments="x:String" Name="strMatchingDate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assigning_ClaimTotal" sap:VirtualizedContainerService.HintSize="748,61" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[out_DblClaimTotalCost]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[in_dt_FlexmanData.AsEnumerable().Sum(Function(row) If(Not (String.IsNullOrEmpty(row("amount").ToString)), Cdbl(row("Amount")), 0))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="748,61" sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[out_DblClaimTotalCost]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[Math.Round(out_DblClaimTotalCost,2)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assigning_ReceiptTotal" sap:VirtualizedContainerService.HintSize="748,61" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[DblReceiptTotalCost]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[io_dt_ReceiptData.AsEnumerable().Sum(Function(row) If(Not (String.IsNullOrEmpty(row("amount").ToString)), CDbl(row("amount")), 0))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="748,61" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[DblReceiptTotalCost]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[Math.Round(DblReceiptTotalCost,2)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message-ReceiptTotal" sap:VirtualizedContainerService.HintSize="748,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Receipt Total: &quot;+DblReceiptTotalCost.ToString+Environment.NewLine+&quot;Claim Total: &quot;+out_DblClaimTotalCost.ToString]" />
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Date Of Service" DataTable="[io_dt_ReceiptData]" DisplayName="Add Data Column-DOS" sap:VirtualizedContainerService.HintSize="748,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="IsMatch" DataTable="[in_dt_FlexmanData]" DisplayName="Add Data Column-IsMatch" sap:VirtualizedContainerService.HintSize="748,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" />
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[io_dt_ReceiptData]" DisplayName="For Each Row in Data Table-Receipt" sap:VirtualizedContainerService.HintSize="748,3957" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ReceiptRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Process foreach row" sap:VirtualizedContainerService.HintSize="714,3841" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dt_FlexmanData]" DisplayName="For Each Row in Data Table-Flexman" sap:VirtualizedContainerService.HintSize="652,2720" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Flexrow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Generating DOS for Receipt" sap:VirtualizedContainerService.HintSize="618,2604" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="dblFlexmanAmount" />
                      <Variable x:TypeArguments="x:Double" Name="dblReceiptAmount" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[Flexrow(&quot;IsMatch&quot;).ToString=&quot;Yes&quot;]" DisplayName="If-MatchedAlready" sap:VirtualizedContainerService.HintSize="556,376" sap2010:WorkflowViewState.IdRef="If_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:Continue DisplayName="Continue-Proceed For Next Line Item" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="FlexmanLineAmount" sap:VirtualizedContainerService.HintSize="556,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[dblFlexmanAmount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[CDbl(Flexrow("Amount"))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="ReceiptLineAmount" sap:VirtualizedContainerService.HintSize="556,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[dblReceiptAmount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[if(String.IsNullOrEmpty(ReceiptRow("amount").ToString),Nothing,CDbl(ReceiptRow("amount")))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:MultipleAssign DisplayName="Multiple Assign-All_Dates-1" sap:VirtualizedContainerService.HintSize="556,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strFlexDateOfService]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[If(Flexrow("DateOfService") Is Nothing, Nothing, Cdate(Flexrow("DateOfService")).ToString("MM/dd/yyyy"))]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strRecFillDate]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[If(ReceiptRow("coldatefiled") Is Nothing, Nothing, ReceiptRow("coldatefiled").ToString())]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strRecReceiptDate]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[If(ReceiptRow("ReceiptDate") Is Nothing, Nothing, ReceiptRow("ReceiptDate").ToString())]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strRecDOS]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[If(ReceiptRow("DOS") Is Nothing, Nothing, ReceiptRow("DOS").ToString())]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <If Condition="[dblFlexmanAmount=dblReceiptAmount]" DisplayName="If-AmountMatches" sap:VirtualizedContainerService.HintSize="556,1641" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[strFlexDateOfService=strRecReceiptDate or strFlexDateOfService=strRecFillDate or strFlexDateOfService=strRecDOS]" DisplayName="If-CheckDateMatch" sap:VirtualizedContainerService.HintSize="478,1088" sap2010:WorkflowViewState.IdRef="If_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Both Amount and Date Matched" sap:VirtualizedContainerService.HintSize="400,338" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Receipt DOS" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[ReceiptRow("Date Of Service")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strFlexDateOfService]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="IsMatched" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[Flexrow("IsMatch")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Yes"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break DisplayName="Break-Exit the Loop" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_1" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Both Amount and Date didn't Match" sap:VirtualizedContainerService.HintSize="400,574" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim matchingDate As String = Nothing&#xA;&#xA;If Not String.IsNullOrEmpty(receiptDate) AndAlso Not String.IsNullOrWhiteSpace(receiptDate) Then&#xA;    matchingDate = receiptDate.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(coldatefilled) AndAlso Not String.IsNullOrWhiteSpace(coldatefilled) Then&#xA;    matchingDate = coldatefilled.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(DOS) AndAlso Not String.IsNullOrWhiteSpace(DOS) Then&#xA;    matchingDate = DOS.Trim()&#xA;End If&#xA;&#xA;matchingDateOut = matchingDate&#xA;" DisplayName="Invoke Code-DatePriority1" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                                <ui:InvokeCode.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="DOS">[strRecDOS]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="coldatefilled">[strRecFillDate]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ReceiptDate">[strRecReceiptDate]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="matchingDateOut">[strMatchingDate]</OutArgument>
                                </ui:InvokeCode.Arguments>
                              </ui:InvokeCode>
                              <ui:LogMessage DisplayName="Log Message-Result" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[strMatchingDate]" />
                              <Assign DisplayName="Assign-DateOfService1" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[ReceiptRow("Date Of Service")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strMatchingDate]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break DisplayName="Break-DoneExtracting" sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Break_3" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="No Match both Amount and Date-1" sap:VirtualizedContainerService.HintSize="400,377" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim matchingDate As String = Nothing&#xA;&#xA;If Not String.IsNullOrEmpty(receiptDate) AndAlso Not String.IsNullOrWhiteSpace(receiptDate) Then&#xA;    matchingDate = receiptDate.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(coldatefilled) AndAlso Not String.IsNullOrWhiteSpace(coldatefilled) Then&#xA;    matchingDate = coldatefilled.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(DOS) AndAlso Not String.IsNullOrWhiteSpace(DOS) Then&#xA;    matchingDate = DOS.Trim()&#xA;End If&#xA;&#xA;matchingDateOut = matchingDate&#xA;" DisplayName="Invoke Code-DatePriority3" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="DOS">[strRecDOS]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="coldatefilled">[strRecFillDate]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ReceiptDate">[strRecReceiptDate]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="matchingDateOut">[strMatchingDate]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                          <Assign DisplayName="Assign-DateResult3" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[ReceiptRow("Date Of Service")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strMatchingDate]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <If Condition="[ReceiptRow(&quot;Date Of Service&quot;) is DBNull.Value]" DisplayName="If-NotMatchedRows" sap:VirtualizedContainerService.HintSize="652,970" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Not matched Receipt rows" sap:VirtualizedContainerService.HintSize="493,691" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign-All_Dates" sap:VirtualizedContainerService.HintSize="431,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strRecFillDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[If(ReceiptRow("coldatefiled") Is Nothing, Nothing, ReceiptRow("coldatefiled").ToString())]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strRecReceiptDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[If(ReceiptRow("ReceiptDate") Is Nothing, Nothing, ReceiptRow("ReceiptDate").ToString())]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strRecDOS]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[If(ReceiptRow("DOS") Is Nothing, Nothing, ReceiptRow("DOS").ToString())]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <Sequence DisplayName="No Match both Amount and Date" sap:VirtualizedContainerService.HintSize="431,377" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim matchingDate As String = Nothing&#xA;&#xA;If Not String.IsNullOrEmpty(receiptDate) AndAlso Not String.IsNullOrWhiteSpace(receiptDate) Then&#xA;    matchingDate = receiptDate.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(coldatefilled) AndAlso Not String.IsNullOrWhiteSpace(coldatefilled) Then&#xA;    matchingDate = coldatefilled.Trim()&#xA;ElseIf Not String.IsNullOrEmpty(DOS) AndAlso Not String.IsNullOrWhiteSpace(DOS) Then&#xA;    matchingDate = DOS.Trim()&#xA;End If&#xA;&#xA;matchingDateOut = matchingDate&#xA;" DisplayName="Invoke Code-DatePriority2" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="DOS">[strRecDOS]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="coldatefilled">[strRecFillDate]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ReceiptDate">[strRecReceiptDate]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="matchingDateOut">[strMatchingDate]</OutArgument>
                      </ui:InvokeCode.Arguments>
                    </ui:InvokeCode>
                    <Assign DisplayName="Assign-DateResult2" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[ReceiptRow("Date Of Service")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[strMatchingDate]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;foreach (DataRow row in dataTable.Rows)&#xA;{&#xA;    string amountString = row[&quot;Amount&quot;].ToString();&#xA;    if (double.TryParse(amountString, out double amount))&#xA;    {&#xA;        row[&quot;Amount&quot;] = amount;&#xA;    }&#xA;    else&#xA;    {&#xA;    }&#xA;}&#xA;" DisplayName="Invoke Code-DBL1" sap:VirtualizedContainerService.HintSize="748,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dataTable">[in_dt_FlexmanData]</InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;foreach (DataRow row in dataTable.Rows)&#xA;{&#xA;    string amountString = row[&quot;amount&quot;].ToString();&#xA;    if (double.TryParse(amountString, out double amount))&#xA;    {&#xA;        row[&quot;amount&quot;] = amount;&#xA;    }&#xA;    else&#xA;    {&#xA;        &#xA;    }&#xA;}&#xA;" DisplayName="Invoke Code-DBL2" sap:VirtualizedContainerService.HintSize="748,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dataTable">[io_dt_ReceiptData]</InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:FilterDataTable DataTable="[io_dt_ReceiptData]" DisplayName="Remove 0 ReceiptAmount" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="748,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[io_dt_ReceiptData]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="LTE">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["amount"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:JoinDataTables DataTable1="[in_dt_FlexmanData]" DataTable2="[io_dt_ReceiptData]" DisplayName="Join Data Tables-FlexmanAndReceipt" sap:VirtualizedContainerService.HintSize="748,60" sap2010:WorkflowViewState.IdRef="JoinDataTables_3" JoinType="Full" OutputDataTable="[out_dt_final]">
      <ui:JoinDataTables.Arguments>
        <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
          <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
            <ui:JoinOperationArgument.Column1>
              <InArgument x:TypeArguments="x:String">["Amount"]</InArgument>
            </ui:JoinOperationArgument.Column1>
            <ui:JoinOperationArgument.Column2>
              <InArgument x:TypeArguments="x:String">["amount"]</InArgument>
            </ui:JoinOperationArgument.Column2>
          </ui:JoinOperationArgument>
          <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
            <ui:JoinOperationArgument.Column1>
              <InArgument x:TypeArguments="x:String">["DateOfService"]</InArgument>
            </ui:JoinOperationArgument.Column1>
            <ui:JoinOperationArgument.Column2>
              <InArgument x:TypeArguments="x:String">["Date Of Service"]</InArgument>
            </ui:JoinOperationArgument.Column2>
          </ui:JoinOperationArgument>
        </scg:List>
      </ui:JoinDataTables.Arguments>
    </ui:JoinDataTables>
    <ui:RemoveDuplicateRows DataTable="[out_dt_final]" DisplayName="Remove Duplicate Rows-FromJoin" sap:VirtualizedContainerService.HintSize="748,80" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_2" OutputDataTable="[out_dt_final]" />
    <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="amount_1" DataTable="[out_dt_final]" DisplayName="Sort Data Table-BasedOnAmt" sap:VirtualizedContainerService.HintSize="748,80" sap2010:WorkflowViewState.IdRef="SortDataTable_3" Order="Ascending" OutputDataTable="[out_dt_final]" SortOrder="Ascending" />
  </Sequence>
</Activity>